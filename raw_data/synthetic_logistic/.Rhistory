# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.5  # Growth rate of species 1 (lower)
r2 = 2   # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 10, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.5  # Growth rate of species 1 (lower)
r2 = 2   # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 20, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.5  # Growth rate of species 1 (lower)
r2 = 2   # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 25, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.5  # Growth rate of species 1 (lower)
r2 = 2   # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 15, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.5  # Growth rate of species 1 (lower)
r2 = 2   # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 11, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 11, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 20, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 70   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 25, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 60   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 25, by = 0.1)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 60   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 25, by = 0.05)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
setwd("~/Desktop/time_series_prop/raw_data/synthetic_logistic")
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 60   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 25, by = 0.05)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Save time points and absolute abundances to CSV
write.csv(out_df[, c("time", "x1", "x2")], file = "logistic_2_spp.csv", row.names = FALSE)
parameters
state
logistic_model(0, c(10, 1), parameters)
logistic_model(0, state, parameters)
# Load required package
library(deSolve)
# Define logistic growth model for two species
logistic_model <- function(t, state, parameters) {
with(as.list(c(state, parameters)), {
dx1 <- x1 * (r1 - a1 * x1)
dx2 <- x2 * (r2 - a2 * x2)
list(c(dx1, dx2))
print(list(c(dx1, dx2)))
})
}
# Parameters
r1 = 0.2  # Growth rate of species 1 (lower)
r2 = 1  # Growth rate of species 2 (higher)
K1 = 60   # Carrying capacity of species 1 (higher)
K2 = 50     # Carrying capacity of species 2 (lower)
# Compute a_i = r_i / K_i
parameters <- c(r1 = r1,
r2 = r2,
a1 = r1/K1,
a2 = r2/K2)
# Initial conditions
state <- c(x1 = 10, x2 = 1)
# Time points
times <- seq(0, 25, by = 0.05)
# Run the simulation
out <- ode(y = state, times = times, func = logistic_model, parms = parameters)
out_df <- as.data.frame(out)
# Compute proportions
out_df$prop1 <- out_df$x1 / (out_df$x1 + out_df$x2)
out_df$prop2 <- out_df$x2 / (out_df$x1 + out_df$x2)
# Set up side-by-side plots
par(mfrow = c(1, 2))
# Plot 1: Absolute abundances
plot(out_df$time, out_df$x1, type = "l", col = "blue", ylim = c(0, max(out_df$x1, out_df$x2)),
ylab = "Abundance", xlab = "Time", lwd = 2, main = "Absolute Abundances")
lines(out_df$time, out_df$x2, col = "red", lwd = 2)
legend("topleft", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Plot 2: Proportions
plot(out_df$time, out_df$prop1, type = "l", col = "blue", ylim = c(0, 1),
ylab = "Proportion", xlab = "Time", lwd = 2, main = "Proportions")
lines(out_df$time, out_df$prop2, col = "red", lwd = 2)
legend("topright", legend = c("Species 1", "Species 2"), col = c("blue", "red"), lwd = 2)
# Save time points and absolute abundances to CSV
write.csv(out_df[, c("time", "x1", "x2")], file = "logistic_2_spp.csv", row.names = FALSE)
